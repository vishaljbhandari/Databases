-- Server Configs : Start --

DELETE FROM NETWORKS_PREPAID_TOP_UPS ;
DELETE FROM PREPAID_TOP_UPS ;
DELETE FROM DISTANCE_TIMES_NETWORKS ;
DELETE FROM DISTANCE_TIMES ;
DELETE FROM CASE_REASONS WHERE REASON != 'Default' ;
DELETE FROM FRAUD_TYPES ;

INSERT INTO FRAUD_TYPES (ID, NAME, FRAUD_TYPE, DESCRIPTION, IS_ACTIVE)
	SELECT FRAUD_TYPES_SEQ.nextval, NAME, TYPE, DESCRIPTION, 1 FROM FRAUD_TYPE@DU_NIKIRA ;

INSERT INTO CASE_REASONS (ID, REASON, DESCRIPTION)
	SELECT CASE_REASONS_SEQ.nextval, REASON, DESCRIPTION FROM CASE_REASON@DU_NIKIRA WHERE REASON != 'Default' ;

INSERT INTO DISTANCE_TIMES (ID, LOWER_LIMIT, UPPER_LIMIT, TIME)
	SELECT DISTANCE_TIMES_SEQ.nextval, LOWER_LIMIT, UPPER_LIMIT, TIME FROM DISTANCE_TIME@DU_NIKIRA ;
INSERT INTO DISTANCE_TIMES_NETWORKS (NETWORK_ID, DISTANCE_TIME_ID) SELECT 999, ID FROM DISTANCE_TIMES ;

INSERT INTO PREPAID_TOP_UPS (ID, RATE_PLAN, MIN_AMOUNT, MAX_AMOUNT, DESCRIPTION, RECHARGE_TYPE)
	SELECT PREPAID_TOP_UPS_SEQ.nextval, RATE_PLAN, LOWER_LIMIT, UPPER_LIMIT, DESCRIPTION, RECHARGE_TYPE FROM PREPAID_TOP_UPS@DU_NIKIRA ;
-- Column "Recharge_type" is missing in 7.0's PREPAID_TOP_UPS Table.
INSERT INTO NETWORKS_PREPAID_TOP_UPS (NETWORK_ID, PREPAID_TOP_UP_ID) SELECT 999, ID FROM PREPAID_TOP_UPS ;

DECLARE
	CONF_VAL VARCHAR(10) ;
	NUM VARCHAR(10) ;
	LSP VARCHAR(10) ;
	IMEI VARCHAR(10) ;
	IMSI VARCHAR(10) ;
BEGIN
	SELECT VALUE INTO CONF_VAL FROM CONFIGURATION@DU_NIKIRA WHERE ID = 'MoveToBlacklistActions' ;
	NUM := Split (CONF_VAL, 1, ',') ;
	LSP := Split (CONF_VAL, 2, ',') ;
	IMEI := Split (CONF_VAL, 3, ',') ;
	IMSI := Split (CONF_VAL, 4, ',') ;

	UPDATE PROFILE_OPTIONS SET IS_ENABLED = LSP WHERE ID = 1 ;
	UPDATE PROFILE_OPTIONS SET IS_ENABLED = NUM WHERE ID = 2 ;
	UPDATE PROFILE_OPTIONS SET IS_ENABLED = IMEI WHERE ID = 3 ;
	UPDATE PROFILE_OPTIONS SET IS_ENABLED = IMSI WHERE ID = 4 ;
EXCEPTION WHEN OTHERS THEN
	DBMS_OUTPUT.PUT_LINE('Error while migrating PROFILE_OPTIONS') ;
END ;
/

UPDATE FIELD_CONFIGS SET IS_VISIBLE = 1 WHERE RECORD_CONFIG_ID = 3 AND FIELD_ID = 70 ;

UPDATE FIELD_CONFIGS SET DS_CATEGORY = TRIM(REPLACE(DS_CATEGORY,'SMM.PRECHECK'))
	WHERE RECORD_CONFIG_ID IN (3,4) AND DS_CATEGORY LIKE 'SMM.PRECHECK%'
		AND DATABASE_FIELD NOT IN (
			SELECT DATABASE_FIELD FROM DS_FIELD_CONFIG@DU_NIKIRA WHERE DS_TYPE IN (2,5) AND DS_CATEGORY LIKE '%SMM.PRECHECK%'
		) ;

UPDATE FIELD_CONFIGS SET DS_CATEGORY = 'SMM.PRECHECK ' || DS_CATEGORY, IS_VISIBLE = 1
	WHERE RECORD_CONFIG_ID IN (3,4) AND (DS_CATEGORY NOT LIKE 'SMM.PRECHECK%' OR DS_CATEGORY IS NULL)
		AND DATABASE_FIELD IN (
			SELECT DATABASE_FIELD FROM DS_FIELD_CONFIG@DU_NIKIRA WHERE DS_TYPE IN (2,5) AND DS_CATEGORY LIKE '%SMM.PRECHECK%'
        ) ;

DELETE FROM PRECHECK_FIELD_CONFIGS ;

INSERT INTO PRECHECK_FIELD_CONFIGS (ID, RECORD_CONFIG_ID, FIELD_ASSOCIATION)
	SELECT PRECHECK_FIELD_CONFIGS_SEQ.NEXTVAL, 3, FIELD_ID FROM FIELD_CONFIGS
		WHERE IS_VISIBLE = 1 AND DS_CATEGORY like '%SMM.PRECHECK%'
		AND RECORD_CONFIG_ID = 3 AND ASSOCIATED_FIELD IS NULL ;

INSERT INTO PRECHECK_FIELD_CONFIGS (ID, RECORD_CONFIG_ID, FIELD_ASSOCIATION)
	SELECT PRECHECK_FIELD_CONFIGS_SEQ.NEXTVAL, 4, ASSOCIATED_FIELD FROM FIELD_CONFIGS
		WHERE IS_VISIBLE = 1 AND DS_CATEGORY like '%SMM.PRECHECK%'
		AND RECORD_CONFIG_ID = 3 AND ASSOCIATED_FIELD IS NOT NULL ;


-- Server Configs : End --

COMMIT;

EXIT;
